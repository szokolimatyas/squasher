Aliases:
$4364 -> {'ok', list(?)}
$4368 -> <$4382 | $4913>
$4382 -> <$5432 | $4913>
$4540 -> {'clause', {integer(), integer()}, list(<$6269 | $5488 | <$5432 | $6356>>), list(list(<$6269 | $5488 | <$5432 | $6356>>)), list(any())}
$4892 -> {'pany', integer()}
$4893 -> {'test', integer()}
$4898 -> {'lint', <'start' | 'attribute' | 'function'>, <'' | 'bead'>, list(?), {integer(), {$6264, {$6264, 'nil', 'nil'}, 'nil'}}, list(?), list(<'bitlevel_binaries' | 'binary_comprehension' | <'export_all' | 'report_warnings' | 'report_errors' | $6435>>), #{}, <{integer(), {$4893, {$4892, {$6402, 'nil', 'nil'}, 'nil'}, {$6402, 'nil', 'nil'}}} | {integer(), 'nil'}>, {integer(), 'nil'}, <{integer(), {$6264, {$6264, 'nil', 'nil'}, {$6264, 'nil', 'nil'}}} | {integer(), {$6264, {$6264, {$6402, 'nil', 'nil'}, 'nil'}, {$6264, 'nil', {$6402, 'nil', 'nil'}}}} | {integer(), {$6264, {$6264, 'nil', 'nil'}, {$6264, 'nil', {$6402, 'nil', 'nil'}}}}>, list(?), integer(), list(?), list(?), {integer(), 'nil'}, <list(?) | $6402>, list(?), integer(), list(<'unused_record' | 'underscore_match' | 'unused_function' | 'shadow_vars' | 'obsolete_guard' | 'deprecated_function' | 'removed' | 'export_all' | 'bif_clash' | 'nif_inline' | 'unused_type' | 'unused_vars' | 'deprecated_type'>), list(?), list(?), list({list(integer()), {{integer(), integer()}, 'erl_lint', 'export_all'}}), list(integer()), 'false', 'false', list({any(), any()}), 'undefined', {'usage', #{}, list(?), {integer(), 'nil'}, #{}}, #{}, #{}, #{}, #{}, {integer(), 'nil'}, #{}, 'none', 'guard', 'false'}
$4903 -> {'bound', <'used' | 'unused'>, list({integer(), integer()})}
$4913 -> $5432
$5432 -> <$5496 | $5488>
$5488 -> <$6269 | $5496>
$5496 -> <$6269 | $6274>
$5869 -> <{'case', {integer(), integer()}} | {'if', {integer(), integer()}} | {'receive', {integer(), integer()}}>
$6024 -> <{'cd', integer()} | {'c', integer()}>
$6260 -> <$6362 | {'attribute', <{integer(), integer()} | list($6367)>, <'module' | 'file' | 'compile'>, <{list(integer()), integer()} | 'export_all' | 'bead'>}>
$6264 -> <{'record_info', integer()} | {'module_info', integer()}>
$6269 -> <$6356 | $6274>
$6274 -> <$6356 | {'atom', list($6367), <'cd' | 'c' | 'bead'>}>
$6337 -> <{'call', list($6367), <$4382 | $4368>, list(<<$5432 | $6356> | $6274>)} | $6356>
$6356 -> <{'var', {integer(), integer()}, <'P' | 'MaxNum' | 'Pid' | 'MyPid' | 'Collector' | '_' | 'MainPid' | 'F' | 'Pids' | 'E' | 'L' | 'FinishedNum' | 'Res'>} | {'if', {integer(), integer()}, list($4540)} | {'receive', {integer(), integer()}, list($4540)} | {'call', <{integer(), integer()} | list($6367)>, <$4368 | $4913 | {'remote', {integer(), integer()}, <$4368 | $4913>, <$4368 | $4913>} | <$5432 | $6356>>, list(any())} | {'case', {integer(), integer()}, $6337, list($4540)} | {'string', <{integer(), integer()} | list($6367)>, list(integer())} | {'tuple', {integer(), integer()}, list(<$6269 | $5488 | <$5432 | $6356>>)} | {'op', {integer(), integer()}, <'>=' | '!' | '+'>, $6356, any()} | {'atom', <{integer(), integer()} | list($6367)>, <'lists' | 'worker' | 'exit' | 'spawn' | 'collector' | 'cd' | 'c' | 'self' | 'bead' | 'flatlength' | 'normal' | boolean() | 'sort'>}>
$6362 -> <{'eof', {integer(), integer()}} | {'function', <{integer(), integer()} | list($6367)>, <'worker' | 'pany' | 'test' | 'collector'>, integer(), list($4540)} | {'attribute', <{integer(), integer()} | list($6367)>, <'module' | 'compile'>, <'export_all' | 'bead'>}>
$6367 -> <{'location', {integer(), integer()}} | {'file', list(integer())}>
$6402 -> <{'worker', integer()} | {'collector', integer()}>
$6435 -> {'outdir', list(integer())}
$6436 -> <{'Pid', $4903} | {'F', $4903} | {'MainPid', $4903} | {'FinishedNum', $4903} | {'MaxNum', $4903} | {'E', $4903}>

Functions:
add_lint_warning({{integer(), integer()}, 'erl_lint', 'export_all'}, list(integer()), $4898) -> $4898
add_warning(list($6367), 'export_all', $4898) -> $4898
anno_set_file($6337, list(integer())) -> $6337
any_control_characters(list(integer())) -> 'false'
attribute_state($6362, $4898) -> $4898
auto_import_suppressed(list(<'export_all' | 'report_warnings' | 'report_errors' | $6435>)) -> {integer(), 'nil'}
bif_clash_specifically_disabled($4898, $6024) -> 'false'
bif_clashes(list(<$6362 | $6260>), $4898) -> $4898
bool_option(<'warn_unused_import' | 'warn_missing_spec' | 'warn_unused_function' | 'warn_removed' | 'warn_obsolete_guard' | 'warn_export_all' | 'warn_deprecated_function' | 'warn_export_vars' | 'warn_missing_spec_all' | 'warn_deprecated_type' | 'warn_unused_vars' | 'warn_untyped_record' | 'warn_bif_clash' | 'warn_unused_record' | 'warn_unused_type' | 'warn_keywords' | 'warn_nif_inline' | 'warn_shadow_vars' | 'warn_underscore_match'>, <'nowarn_bif_clash' | 'nowarn_unused_type' | 'nowarn_keywords' | 'nowarn_removed' | 'nowarn_export_vars' | 'nowarn_nif_inline' | 'nowarn_export_all' | 'nowarn_obsolete_guard' | 'nowarn_unused_record' | 'nowarn_unused_vars' | 'nowarn_deprecated_type' | 'nowarn_untyped_record' | 'nowarn_deprecated_function' | 'nowarn_unused_function' | 'nowarn_missing_spec_all' | 'nowarn_shadow_vars' | 'nowarn_unused_import' | 'nowarn_underscore_match' | 'nowarn_missing_spec'>, boolean(), list(<'bitlevel_binaries' | 'export_all' | 'report_warnings' | 'binary_comprehension' | 'report_errors' | $6435>)) -> boolean()
call_function(list($6367), <'cd' | 'c'>, integer(), $4898) -> $4898
check_module_name('bead', list($6367), $4898) -> $4898
check_unused_vars(list($6436), list(?), $4898) -> {list($6436), $4898}
clause($4540, $4898) -> {list($6436), $4898}
clauses(list($4540), $4898) -> $4898
compiler_options(list(<$6362 | $6260>)) -> list('export_all')
define_function(list($6367), <'worker' | 'collector'>, integer(), $4898) -> $4898
disallowed_compile_flags(list(<$6362 | $6260>), $4898) -> $4898
do_expr_var(<'MaxNum' | 'Pid' | 'MainPid' | 'F' | 'E' | 'FinishedNum'>, {integer(), integer()}, list($6436), $4898) -> {list($6436), $4898}
eval_file_attr(list(<$6362 | $6260>), list(integer())) -> list(<$6362 | $6260>)
eval_file_attribute(list(<$6362 | $6260>), $4898) -> list(<$6362 | $6260>)
expr(<$5432 | $6356 | $6337>, list($6436), $4898) -> {list($6436), $4898}
expr_list(list(<$5432 | $6356>), list($6436), $4898) -> {list($6436), $4898}
expr_var(<'MaxNum' | 'Pid' | 'MainPid' | 'F' | 'E' | 'FinishedNum'>, {integer(), integer()}, list($6436), $4898) -> {list($6436), $4898}
exprs(list(<$6356 | $6337>), list($6436), $4898) -> {list($6436), $4898}
exprs_opt(list($6337), list({'Pid', pid()}), list(<'bitlevel_binaries' | 'binary_comprehension'>)) -> $4364
feature_keywords() -> #{}
form(<$6362 | $6260>, $4898) -> $4898
forms(list(<$6362 | $6260>), $4898) -> ?
function(list($6367), <'worker' | 'collector'>, integer(), list($4540), $4898) -> $4898
function_check_max_args(list($6367), integer(), $4898) -> $4898
function_state($6362, $4898) -> $4898
gexpr(<$6269 | $6356>, list($6436), $4898) -> {list($6436), $4898}
gexpr_list(list($6356), list($6436), $4898) -> {list($6436), $4898}
guard(list(list(<$6269 | $6356>)), list($6436), $4898) -> {list($6436), $4898}
guard_test(<$6269 | $6356>, list($6436), $4898) -> {list($6436), $4898}
guard_test2(<$6269 | $6356>, list($6436), $4898) -> {list($6436), $4898}
guard_tests(list(<$6269 | $6356>), list($6436), $4898) -> {list($6436), $4898}
head(list(<$6269 | $6356>), list($6436), $4898) -> {list(?), list($6436), $4898}
head(list(<$6269 | $6356>), list($6436), list($6436), $4898) -> {list(?), list($6436), $4898}
icrt_clause($4540, list($6436), $4898) -> {list($6436), $4898}
icrt_clauses(list($4540), list($6436), $4898) -> {list(list($6436)), $4898}
icrt_clauses(list($4540), $5869, list($6436), $4898) -> {list($6436), $4898}
icrt_export(list(list($6436)), list($6436), $5869, $4898) -> list($6436)
icrt_export(list($6436), list($6436), $5869, integer(), list($6436)) -> list($6436)
imported(<'worker' | 'collector' | 'cd' | 'c'>, integer(), $4898) -> 'no'
includes_qlc_hrl(list(<$6362 | $6260>), $4898) -> $4898
is_autoimport_suppressed({integer(), 'nil'}, $6024) -> 'false'
is_gexpr_op('>=', integer()) -> 'true'
is_local_function({integer(), 'nil'}, $6024) -> 'false'
is_valid_call($6356) -> 'true'
is_warn_enabled(<'export_all' | 'keyword_warning' | 'bif_clash'>, $4898) -> boolean()
keyword_warning(<{integer(), integer()} | list($6367)>, <'worker' | 'collector' | 'cd' | 'c' | 'bead' | 'true' | 'false'>, $4898) -> $4898
loc(<{integer(), integer()} | list($6367)>, $4898) -> {list(integer()), {integer(), integer()}}
local_functions(list(<$6362 | $6260>)) -> {integer(), {$4893, {$4892, {$6402, 'nil', 'nil'}, 'nil'}, {$6402, 'nil', 'nil'}}}
maps_prepend(list(?), $6024, #{}) -> #{}
merge_annos(list({integer(), integer()}), list({integer(), integer()})) -> list({integer(), integer()})
merge_state('bound', 'bound') -> 'bound'
merge_used('used', <'used' | 'unused'>) -> 'used'
module(list(<$6362 | $6260>), list(integer()), list(<'report_warnings' | 'report_errors' | $6435>)) -> ?
not_deprecated(list(<$6362 | $6260>), $4898) -> $4898
not_removed(list(<$6362 | $6260>), $4898) -> $4898
nowarn_function('nowarn_bif_clash', list(<'bitlevel_binaries' | 'export_all' | 'report_warnings' | 'binary_comprehension' | 'report_errors' | $6435>)) -> list(?)
obsolete_guard(<$6269 | $6356>, $4898) -> $4898
pack_errors(list(?)) -> list(?)
pack_warnings(list(?)) -> list(?)
pat_var(<'MaxNum' | 'Pid' | 'MainPid' | 'F' | 'E' | 'FinishedNum'>, {integer(), integer()}, list($6436), list(?), $4898) -> {list(?), list($6436), $4898}
pattern(<$6269 | $6356>, list($6436), list($6436), $4898) -> {list(?), list($6436), $4898}
pattern_list(list(<$6269 | $6356>), list($6436), list($6436), $4898) -> {list(?), list($6436), $4898}
pre_scan(list(<$6362 | $6260>), $4898) -> $4898
pseudolocals() -> list($6264)
remove_non_visible(list(integer())) -> list(integer())
return_status($4898) -> $4364
set_file(list($6337), list(integer())) -> list($6337)
set_form_file($6362, list(integer())) -> $6362
start(list(integer()), list(<'bitlevel_binaries' | 'export_all' | 'report_warnings' | 'binary_comprehension' | 'report_errors' | $6435>)) -> $4898
start_state($6260, $4898) -> $4898
unused_vars(list($6436), list(?), $4898) -> list(?)
value_option('warn_format', integer(), 'warn_format', integer(), 'nowarn_format', integer(), list(<'bitlevel_binaries' | 'export_all' | 'report_warnings' | 'binary_comprehension' | 'report_errors' | $6435>)) -> integer()
vtmerge(list($6436), list($6436)) -> list($6436)
vtmerge_pat(list($6436), list($6436), $4898) -> {list($6436), $4898}
vtnew(list(?), list(?)) -> list(?)
vtupdate(list($6436), list($6436)) -> list($6436)
warn_invalid_call({integer(), integer()}, $6356, $4898) -> $4898
warn_unused_vars(list(?), list($6436), $4898) -> {list($6436), $4898}
