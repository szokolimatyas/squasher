Aliases:
$4364 -> {'ok', list(?)}
$4540 -> {'clause', {integer(), integer()}, list($6355), list(list($6355)), list(any())}
$4892 -> {'pany', integer()}
$4893 -> {'test', integer()}
$4895 -> <'bitlevel_binaries' | 'export_all' | 'report_warnings' | 'binary_comprehension' | 'report_errors' | {'outdir', list(integer())}>
$4898 -> {'lint', <'start' | 'attribute' | 'function'>, <'' | 'bead'>, list(?), {integer(), {$6265, {$6265, 'nil', 'nil'}, 'nil'}}, list(?), list(<$4895 | 'bitlevel_binaries' | 'binary_comprehension'>), #{}, <{integer(), {$4893, {$4892, {$6403, 'nil', 'nil'}, 'nil'}, {$6403, 'nil', 'nil'}}} | {integer(), 'nil'}>, {integer(), 'nil'}, <{integer(), {$6265, {$6265, 'nil', 'nil'}, {$6265, 'nil', 'nil'}}} | {integer(), {$6265, {$6265, {$6403, 'nil', 'nil'}, 'nil'}, {$6265, 'nil', {$6403, 'nil', 'nil'}}}} | {integer(), {$6265, {$6265, 'nil', 'nil'}, {$6265, 'nil', {$6403, 'nil', 'nil'}}}}>, list(?), integer(), list(?), list(?), {integer(), 'nil'}, <list(?) | $6403>, list(?), integer(), list(<'unused_record' | 'underscore_match' | 'unused_function' | 'shadow_vars' | 'obsolete_guard' | 'deprecated_function' | 'removed' | 'export_all' | 'bif_clash' | 'nif_inline' | 'unused_type' | 'unused_vars' | 'deprecated_type'>), list(?), list(?), list({list(integer()), {{integer(), integer()}, 'erl_lint', 'export_all'}}), list(integer()), 'false', 'false', list({any(), any()}), 'undefined', {'usage', #{}, list(?), {integer(), 'nil'}, #{}}, #{}, #{}, #{}, #{}, {integer(), 'nil'}, #{}, 'none', 'guard', 'false'}
$4903 -> {'bound', <'used' | 'unused'>, list({integer(), integer()})}
$5867 -> <{'case', {integer(), integer()}} | {'if', {integer(), integer()}} | {'receive', {integer(), integer()}}>
$6025 -> <{'cd', integer()} | {'c', integer()}>
$6265 -> <{'record_info', integer()} | {'module_info', integer()}>
$6355 -> <{'op', {integer(), integer()}, <'>=' | '!' | '+'>, $6355, any()} | {'var', {integer(), integer()}, <'P' | 'MaxNum' | 'Pid' | 'MyPid' | 'Collector' | '_' | 'MainPid' | 'F' | 'Pids' | 'E' | 'L' | 'FinishedNum' | 'Res'>} | {'if', {integer(), integer()}, list($4540)} | {'receive', {integer(), integer()}, list($4540)} | {'atom', <list($6368) | {integer(), integer()}>, <'lists' | 'worker' | 'exit' | 'spawn' | 'collector' | 'cd' | 'c' | 'self' | 'bead' | 'flatlength' | 'normal' | boolean() | 'sort'>} | {'string', <list($6368) | {integer(), integer()}>, list(integer())} | {'call', <list($6368) | {integer(), integer()}>, <$6355 | {'remote', {integer(), integer()}, $6355, $6355}>, list(any())} | {'tuple', {integer(), integer()}, list($6355)} | {'case', {integer(), integer()}, $6355, list($4540)}>
$6361 -> <{'eof', {integer(), integer()}} | {'attribute', <list($6368) | {integer(), integer()}>, <'module' | 'file' | 'compile'>, <{list(integer()), integer()} | 'export_all' | 'bead'>} | {'function', <list($6368) | {integer(), integer()}>, <'worker' | 'pany' | 'test' | 'collector'>, integer(), list($4540)}>
$6368 -> <{'location', {integer(), integer()}} | {'file', list(integer())}>
$6403 -> <{'worker', integer()} | list(?) | {'collector', integer()}>
$6438 -> <{'F', $4903} | {'MainPid', $4903} | {'FinishedNum', $4903} | {'Pid', <pid() | $4903>} | {'MaxNum', $4903} | {'E', $4903}>

Functions:
add_lint_warning({{integer(), integer()}, 'erl_lint', 'export_all'}, list(integer()), $4898) -> $4898
add_warning(list($6368), 'export_all', $4898) -> $4898
anno_set_file($6355, list(integer())) -> $6355
any_control_characters(list(integer())) -> 'false'
attribute_state($6361, $4898) -> $4898
auto_import_suppressed(list($4895)) -> {integer(), 'nil'}
bif_clash_specifically_disabled($4898, $6025) -> 'false'
bif_clashes(list($6361), $4898) -> $4898
bool_option(<'warn_unused_import' | 'warn_missing_spec' | 'warn_unused_function' | 'warn_removed' | 'warn_obsolete_guard' | 'warn_export_all' | 'warn_deprecated_function' | 'warn_export_vars' | 'warn_missing_spec_all' | 'warn_deprecated_type' | 'warn_unused_vars' | 'warn_untyped_record' | 'warn_bif_clash' | 'warn_unused_record' | 'warn_unused_type' | 'warn_keywords' | 'warn_nif_inline' | 'warn_shadow_vars' | 'warn_underscore_match'>, <'nowarn_bif_clash' | 'nowarn_unused_type' | 'nowarn_keywords' | 'nowarn_removed' | 'nowarn_export_vars' | 'nowarn_nif_inline' | 'nowarn_export_all' | 'nowarn_obsolete_guard' | 'nowarn_unused_record' | 'nowarn_unused_vars' | 'nowarn_deprecated_type' | 'nowarn_untyped_record' | 'nowarn_deprecated_function' | 'nowarn_unused_function' | 'nowarn_missing_spec_all' | 'nowarn_shadow_vars' | 'nowarn_unused_import' | 'nowarn_underscore_match' | 'nowarn_missing_spec'>, boolean(), list($4895)) -> boolean()
call_function(list($6368), <'cd' | 'c'>, integer(), $4898) -> $4898
check_module_name('bead', list($6368), $4898) -> $4898
check_unused_vars(list($6438), list(?), $4898) -> {list($6438), $4898}
clause($4540, $4898) -> {list($6438), $4898}
clauses(list($4540), $4898) -> $4898
compiler_options(list($6361)) -> list('export_all')
define_function(list($6368), <'worker' | 'collector'>, integer(), $4898) -> $4898
disallowed_compile_flags(list($6361), $4898) -> $4898
do_expr_var(<'MaxNum' | 'Pid' | 'MainPid' | 'F' | 'E' | 'FinishedNum'>, {integer(), integer()}, list($6438), $4898) -> {list($6438), $4898}
eval_file_attr(list($6361), list(integer())) -> list($6361)
eval_file_attribute(list($6361), $4898) -> list($6361)
expr($6355, list($6438), $4898) -> {list($6438), $4898}
expr_list(list($6355), list($6438), $4898) -> {list($6438), $4898}
expr_var(<'MaxNum' | 'Pid' | 'MainPid' | 'F' | 'E' | 'FinishedNum'>, {integer(), integer()}, list($6438), $4898) -> {list($6438), $4898}
exprs(list($6355), list($6438), $4898) -> {list($6438), $4898}
exprs_opt(list($6355), list($6438), list(<'bitlevel_binaries' | 'binary_comprehension'>)) -> $4364
feature_keywords() -> #{}
form($6361, $4898) -> $4898
forms(list($6361), $4898) -> ?
function(list($6368), <'worker' | 'collector'>, integer(), list($4540), $4898) -> $4898
function_check_max_args(list($6368), integer(), $4898) -> $4898
function_state($6361, $4898) -> $4898
gexpr($6355, list($6438), $4898) -> {list($6438), $4898}
gexpr_list(list($6355), list($6438), $4898) -> {list($6438), $4898}
guard(list(list($6355)), list($6438), $4898) -> {list($6438), $4898}
guard_test($6355, list($6438), $4898) -> {list($6438), $4898}
guard_test2($6355, list($6438), $4898) -> {list($6438), $4898}
guard_tests(list($6355), list($6438), $4898) -> {list($6438), $4898}
head(list($6355), list($6438), $4898) -> {list(?), list($6438), $4898}
head(list($6355), list($6438), list($6438), $4898) -> {list(?), list($6438), $4898}
icrt_clause($4540, list($6438), $4898) -> {list($6438), $4898}
icrt_clauses(list($4540), list($6438), $4898) -> {list(list($6438)), $4898}
icrt_clauses(list($4540), $5867, list($6438), $4898) -> {list($6438), $4898}
icrt_export(list(list($6438)), list($6438), $5867, $4898) -> list($6438)
icrt_export(list($6438), list($6438), $5867, integer(), list($6438)) -> list($6438)
imported(<'worker' | 'collector' | 'cd' | 'c'>, integer(), $4898) -> 'no'
includes_qlc_hrl(list($6361), $4898) -> $4898
is_autoimport_suppressed({integer(), 'nil'}, $6025) -> 'false'
is_gexpr_op('>=', integer()) -> 'true'
is_local_function({integer(), 'nil'}, $6025) -> 'false'
is_valid_call($6355) -> 'true'
is_warn_enabled(<'export_all' | 'keyword_warning' | 'bif_clash'>, $4898) -> boolean()
keyword_warning(<list($6368) | {integer(), integer()}>, <'worker' | 'collector' | 'cd' | 'c' | 'bead' | 'true' | 'false'>, $4898) -> $4898
loc(<list($6368) | {integer(), integer()}>, $4898) -> {list(integer()), {integer(), integer()}}
local_functions(list($6361)) -> {integer(), {$4893, {$4892, {$6403, 'nil', 'nil'}, 'nil'}, {$6403, 'nil', 'nil'}}}
maps_prepend(list(?), $6025, #{}) -> #{}
merge_annos(list({integer(), integer()}), list({integer(), integer()})) -> list({integer(), integer()})
merge_state('bound', 'bound') -> 'bound'
merge_used('used', <'used' | 'unused'>) -> 'used'
module(list($6361), list(integer()), list($4895)) -> ?
not_deprecated(list($6361), $4898) -> $4898
not_removed(list($6361), $4898) -> $4898
nowarn_function('nowarn_bif_clash', list($4895)) -> list(?)
obsolete_guard($6355, $4898) -> $4898
pack_errors(list(?)) -> list(?)
pack_warnings(list(?)) -> list(?)
pat_var(<'MaxNum' | 'Pid' | 'MainPid' | 'F' | 'E' | 'FinishedNum'>, {integer(), integer()}, list($6438), list(?), $4898) -> {list(?), list($6438), $4898}
pattern($6355, list($6438), list($6438), $4898) -> {list(?), list($6438), $4898}
pattern_list(list($6355), list($6438), list($6438), $4898) -> {list(?), list($6438), $4898}
pre_scan(list($6361), $4898) -> $4898
pseudolocals() -> list($6265)
remove_non_visible(list(integer())) -> list(integer())
return_status($4898) -> $4364
set_file(list($6355), list(integer())) -> list($6355)
set_form_file($6361, list(integer())) -> $6361
start(list(integer()), list($4895)) -> $4898
start_state($6361, $4898) -> $4898
unused_vars(list($6438), list(?), $4898) -> list(?)
value_option('warn_format', integer(), 'warn_format', integer(), 'nowarn_format', integer(), list($4895)) -> integer()
vtmerge(list($6438), list($6438)) -> list($6438)
vtmerge_pat(list($6438), list($6438), $4898) -> {list($6438), $4898}
vtnew(list(?), list(?)) -> list(?)
vtupdate(list($6438), list($6438)) -> list($6438)
warn_invalid_call({integer(), integer()}, $6355, $4898) -> $4898
warn_unused_vars(list(?), list($6438), $4898) -> {list($6438), $4898}
