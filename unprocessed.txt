
Functions:
verify_cert_fingerprint({'OTPCertificate', {'OTPTBSCertificate', 'v3', integer(), {'SignatureAlgorithm', {integer(), integer(), integer(), integer(), integer(), integer(), integer()}, 'NULL'}, {'rdnSequence', list(list({'AttributeTypeAndValue', {integer(), integer(), integer(), integer()}, {'printableString', list(integer())} | list(integer())}))}, {'Validity', {'utcTime', list(integer())}, {'utcTime', list(integer())}}, {'rdnSequence', list(list({'AttributeTypeAndValue', {integer(), integer(), integer(), integer()}, list(integer()) | {'utf8String', binary()}}))}, {'OTPSubjectPublicKeyInfo', {'PublicKeyAlgorithm', {integer(), integer(), integer(), integer(), integer(), integer(), integer()}, 'NULL'}, {'RSAPublicKey', integer(), integer()}}, 'asn1_NOVALUE', 'asn1_NOVALUE', list({'Extension', {integer(), integer(), integer(), integer()} | {integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer()}, boolean(), {'BasicConstraints', 'false', 'asn1_NOVALUE'} | list({'dNSName', list(integer())} | {integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer()} | {'AccessDescription', {integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer()}, {'uniformResourceIdentifier', list(integer())}} | {'PolicyInformation', {integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer()}, 'asn1_NOVALUE'}) | binary() | {'AuthorityKeyIdentifier', binary(), 'asn1_NOVALUE', 'asn1_NOVALUE'}})}, {'SignatureAlgorithm', {integer(), integer(), integer(), integer(), integer(), integer(), integer()}, 'NULL'}, binary()}, {'sha', list(integer())}) -> {'valid', list(integer())} | {'fail', 'fingerprint_no_match' | 'invalid_fingerprint'}
verify_cert_fingerprint({'OTPCertificate', {'OTPTBSCertificate', 'v3', integer(), {'SignatureAlgorithm', {integer(), integer(), integer(), integer(), integer(), integer(), integer()}, 'NULL'}, {'rdnSequence', list(list({'AttributeTypeAndValue', {integer(), integer(), integer(), integer()}, {'printableString', list(integer())} | list(integer())}))}, {'Validity', {'utcTime', list(integer())}, {'utcTime', list(integer())}}, {'rdnSequence', list(list({'AttributeTypeAndValue', {integer(), integer(), integer(), integer()}, list(integer()) | {'utf8String', binary()}}))}, {'OTPSubjectPublicKeyInfo', {'PublicKeyAlgorithm', {integer(), integer(), integer(), integer(), integer(), integer(), integer()}, 'NULL'}, {'RSAPublicKey', integer(), integer()}}, 'asn1_NOVALUE', 'asn1_NOVALUE', list({'Extension', {integer(), integer(), integer(), integer()} | {integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer()}, boolean(), {'BasicConstraints', 'false', 'asn1_NOVALUE'} | list({'dNSName', list(integer())} | {integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer()} | {'AccessDescription', {integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer()}, {'uniformResourceIdentifier', list(integer())}} | {'PolicyInformation', {integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer()}, 'asn1_NOVALUE'}) | binary() | {'AuthorityKeyIdentifier', binary(), 'asn1_NOVALUE', 'asn1_NOVALUE'}})}, {'SignatureAlgorithm', {integer(), integer(), integer(), integer(), integer(), integer(), integer()}, 'NULL'}, binary()}, binary(), 'sha') -> {'valid', list(integer())} | {'fail', 'fingerprint_no_match'}
