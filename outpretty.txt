-spec(warn_unused_vars(V14,[V379],[_]) -> {V14,[V379]}).

-spec(warn_invalid_call(V14,V65,{integer(),integer()}) -> V14).

-spec(vtupdate([V379],[V379]) -> [V379]).

-spec(vtnew([_],[_]) -> [_]).

-spec(vtmerge_pat(V14,[V379],[V379]) -> {V14,[V379]}).

-spec(vtmerge([V379],[V379]) -> [V379]).

-spec(value_option([V11],integer(),nowarn_format,integer(),warn_format,integer(),warn_format) -> integer()).

-spec(unused_vars(V14,[_],[V379]) -> [_]).

-spec(start_state(V14,V121) -> V14).

-spec(start([V11],[integer()]) -> V14).

-spec(set_form_file([integer()],V121) -> V121).

-spec(set_file([integer()],[V65]) -> [V65]).

-spec(return_status(V14) -> V1889).

-spec(remove_non_visible([integer()]) -> [integer()]).

-spec(pseudolocals() -> [V3]).

-spec(pre_scan(V14,[V121]) -> V14).

-spec(pattern_list(V14,[V379],[V379],[V65]) -> {V14,[V379],[_]}).

-spec(pattern(V14,[V379],[V379],V65) -> {V14,[V379],[_]}).

-spec(pat_var(V14,[_],[V379],{integer(),integer()},atom()) -> {V14,[V379],[_]}).

-spec(pack_warnings([_]) -> [_]).

-spec(pack_errors([_]) -> [_]).

-spec(obsolete_guard(V14,V65) -> V14).

-spec(nowarn_function([V11],nowarn_bif_clash) -> [_]).

-spec(not_removed(V14,[V121]) -> V14).

-spec(not_deprecated(V14,[V121]) -> V14).

-spec(module([V11],[integer()],[V121]) -> _).

-spec(merge_used((unused|used),used) -> used).

-spec(merge_state(bound,bound) -> bound).

-spec(merge_annos([{integer(),integer()}],[{integer(),integer()}]) -> [{integer(),integer()}]).

-spec(maps_prepend(#{any() => any()},V143,[_]) -> #{any() => any()}).

-spec(local_functions([V121]) -> {{{nil,nil,V6},{nil,{nil,nil,V6},V8},V9},integer()}).

-spec(loc(V14,([V47]|{integer(),integer()})) -> {{integer(),integer()},[integer()]}).

-spec(keyword_warning(V14,atom(),([V47]|{integer(),integer()})) -> V14).

-spec(is_warn_enabled(V14,(bif_clash|keyword_warning|export_all)) -> boolean()).

-spec(is_valid_call(V65) -> true).

-spec(is_local_function(V143,{nil,integer()}) -> false).

-spec(is_gexpr_op(integer(),'>=') -> true).

-spec(is_autoimport_suppressed(V143,{nil,integer()}) -> false).

-spec(includes_qlc_hrl(V14,[V121]) -> V14).

-spec(imported(V14,integer(),atom()) -> no).

-spec(icrt_export([V379],integer(),V3069,[V379],[V379]) -> [V379]).

-spec(icrt_export(V14,V3069,[V379],[[V379]]) -> [V379]).

-spec(icrt_clauses(V14,[V379],V3069,[V111]) -> {V14,[V379]}).

-spec(icrt_clauses(V14,[V379],[V111]) -> {V14,[[V379]]}).

-spec(icrt_clause(V14,[V379],V111) -> {V14,[V379]}).

-spec(head(V14,[V379],[V379],[V65]) -> {V14,[V379],[_]}).

-spec(head(V14,[V379],[V65]) -> {V14,[V379],[_]}).

-spec(guard_tests(V14,[V379],[V65]) -> {V14,[V379]}).

-spec(guard_test2(V14,[V379],V65) -> {V14,[V379]}).

-spec(guard_test(V14,[V379],V65) -> {V14,[V379]}).

-spec(guard(V14,[V379],[[V65]]) -> {V14,[V379]}).

-spec(gexpr_list(V14,[V379],[V65]) -> {V14,[V379]}).

-spec(gexpr(V14,[V379],V65) -> {V14,[V379]}).

-spec(function_state(V14,V121) -> V14).

-spec(function_check_max_args(V14,integer(),[V47]) -> V14).

-spec(function(V14,[V111],integer(),(collector|worker),[V47]) -> V14).

-spec(forms(V14,[V121]) -> _).

-spec(form(V14,V121) -> V14).

-spec(feature_keywords() -> #{any() => any()}).

-spec(exprs_opt([(binary_comprehension|bitlevel_binaries)],[{pid(),'Pid'}],[V65]) -> V1889).

-spec(exprs(V14,[V379],[V65]) -> {V14,[V379]}).

-spec(expr_var(V14,[V379],{integer(),integer()},atom()) -> {V14,[V379]}).

-spec(expr_list(V14,[V379],[V65]) -> {V14,[V379]}).

-spec(expr(V14,[V379],V65) -> {V14,[V379]}).

-spec(eval_file_attribute(V14,[V121]) -> [V121]).

-spec(eval_file_attr([integer()],[V121]) -> [V121]).

-spec(do_expr_var(V14,[V379],{integer(),integer()},atom()) -> {V14,[V379]}).

-spec(disallowed_compile_flags(V14,[V121]) -> V14).

-spec(define_function(V14,integer(),(collector|worker),[V47]) -> V14).

-spec(compiler_options([V121]) -> [export_all]).

-spec(clauses(V14,[V111]) -> V14).

-spec(clause(V14,V111) -> {V14,[V379]}).

-spec(check_unused_vars(V14,[_],[V379]) -> {V14,[V379]}).

-spec(check_module_name(V14,[V47],bead) -> V14).

-spec(call_function(V14,integer(),(c|cd),[V47]) -> V14).

-spec(bool_option([V11],boolean(),atom(),atom()) -> boolean()).

-spec(bif_clashes(V14,[V121]) -> V14).

-spec(bif_clash_specifically_disabled(V143,V14) -> false).

-spec(auto_import_suppressed([V11]) -> {nil,integer()}).

-spec(attribute_state(V14,V121) -> V14).

-spec(any_control_characters([integer()]) -> false).

-spec(anno_set_file([integer()],V65) -> V65).

-spec(add_warning(V14,export_all,[V47]) -> V14).

-spec(add_lint_warning(V14,[integer()],{export_all,erl_lint,{integer(),integer()}}) -> V14).

-type('V3069'::{{integer(),integer()},('case'|'receive'|'if')}).

-type('V1889'::{[_],ok}).

-type('V379'::{{[{integer(),integer()}],(unused|used),bound},atom()}).

-type('V143'::{integer(),(c|cd)}).

-type('V121'::({[V111],integer(),atom(),([V47]|{integer(),integer()}),function}|{(bead|export_all|{integer(),[integer()]}),(compile|file|module),([V47]|{integer(),integer()}),attribute}|{{integer(),integer()},eof})).

-type('V111'::{[any()],[[V65]],[V65],{integer(),integer()},clause}).

-type('V65'::({[integer()],([V47]|{integer(),integer()}),string}|{[V65],{integer(),integer()},tuple}|{[(V65|{{[V111],clauses},{integer(),integer()},'fun'})],({V65,V65,{integer(),integer()},remote}|V65),([V47]|{integer(),integer()}),call}|{integer(),{integer(),integer()},integer}|{V65,V65,('+'|'!'|'>='),{integer(),integer()},op}|{atom(),{integer(),integer()},var}|{[V111],V65,{integer(),integer()},'case'}|{atom(),([V47]|{integer(),integer()}),atom}|{[V111],{integer(),integer()},'if'}|{[V111],{integer(),integer()},'receive'}|{[{V65,V65,{integer(),integer()},generate}],V65,{integer(),integer()},lc}|{V65,V65,{integer(),integer()},match})).

-type('V47'::({[integer()],file}|{{integer(),integer()},location})).

-type('V14'::{false,guard,none,#{any() => any()},{nil,integer()},#{any() => any()},#{any() => any()},#{any() => any()},#{any() => any()},{#{any() => any()},{nil,integer()},[_],#{any() => any()},usage},undefined,[{any(),any()}],false,false,[integer()],[{{export_all,erl_lint,{integer(),integer()}},[integer()]}],[_],[_],[atom()],integer(),[_],V6,{nil,integer()},[_],[_],integer(),[_],({{{nil,nil,V3},{nil,nil,V3},V3},integer()}|{{{{nil,nil,V6},nil,V3},{nil,nil,V3},V3},integer()}|{{{{nil,nil,V6},nil,V3},{nil,{nil,nil,V6},V3},V3},integer()}),{nil,integer()},({nil,integer()}|{{{nil,nil,V6},{nil,{nil,nil,V6},V8},V9},integer()}),#{any() => any()},[V11],[_],{{nil,{nil,nil,V3},V3},integer()},[_],(bead|),(function|attribute|start),lint}).

-type('V11'::({[integer()],outdir}|atom())).

-type('V9'::{integer(),test}).

-type('V8'::{integer(),pany}).

-type('V6'::({integer(),(collector|worker)}|[_])).

-type('V3'::{integer(),(module_info|record_info)}).